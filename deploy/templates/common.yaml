apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_SERVICE_NAME}
  namespace: ${APPLICATION_NAMESPACE}
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: ${APPLICATION_SERVICE_NAME}
  selector:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_ENVIRONMENT}
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APPLICATION_DEPLOYMENT_NAME}
  namespace: ${APPLICATION_NAMESPACE}
  annotations:
    kubernetes.io/change-cause: "${APPLICATION_CHANGE_CAUSE}"
    bellsoft.net/application: ${PROJECT_NAME}
    bellsoft.net/environment: ${APPLICATION_ENVIRONMENT}
  labels:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_ENVIRONMENT}
spec:
  replicas: ${APPLICATION_REPLICAS}
  selector:
    matchLabels:
      app: ${PROJECT_NAME}
      env: ${APPLICATION_ENVIRONMENT}
  template:
    metadata:
      labels:
        app: ${PROJECT_NAME}
        env: ${APPLICATION_ENVIRONMENT}
      annotations:
        bellsoft.net/application: ${PROJECT_NAME}
        bellsoft.net/environment: ${APPLICATION_ENVIRONMENT}
    spec:
      containers:
        - name: ${APPLICATION_NAME}
          image: ${APPLICATION_IMAGE_URL}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: JAVA_TOOL_OPTIONS
              value: "-Duser.timezone=Asia/Seoul -Dfile.encoding=UTF-8"
            - name: LANG
              value: "ko_KR.UTF-8"
            - name: LC_ALL
              value: "ko_KR.UTF-8"
            - name: DEPLOY_ENVIRONMENT
              value: "${DEPLOY_ENVIRONMENT}"
            - name: DEPLOY_COMMIT_SHA
              value: "${CI_COMMIT_SHA}"
            - name: DEPLOY_COMMIT_SHORT_SHA
              value: "${CI_COMMIT_SHORT_SHA}"
            - name: DEPLOY_COMMIT_TITLE
              value: "${CI_COMMIT_TITLE}"
            - name: DEPLOY_COMMIT_TIMESTAMP
              value: "${CI_COMMIT_TIMESTAMP}"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: JWT_SECRET
            - name: DATABASE_MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: DATABASE_MYSQL_HOST
            - name: DATABASE_MYSQL_SCHEMA
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: DATABASE_MYSQL_SCHEMA
                  optional: true
            - name: DATABASE_MYSQL_OPTION
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: DATABASE_MYSQL_OPTION
                  optional: true
            - name: DATABASE_MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: DATABASE_MYSQL_USER
            - name: DATABASE_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: DATABASE_MYSQL_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: REDIS_HOST
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: REDIS_PASSWORD
                  optional: true
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: REDIS_PORT
                  optional: true
            - name: REDIS_NAMESPACE
              valueFrom:
                secretKeyRef:
                  name: ${APPLICATION_NAME}-connection
                  key: REDIS_NAMESPACE
                  optional: true
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            requests:
              cpu: 100m
              memory: 1.5Gi
            limits:
              memory: 3Gi
