[versions]
springBoot = "3.1.5"
springDependencyManagement = "1.1.3"
springSecurity = "6.1.5"
springRabbit = "3.0.2"
springBatch = "5.0.1"
ktlint = "11.3.1"
liquibaseGradle = "2.1.1"
jacocoLog = "3.1.0"
kotlin = "1.8.22"
mysqlConnector = "8.0.33"
liquibase = "4.20.0"
h2database = "2.1.214"
queryDsl = "5.0.0"
jjwt = "0.11.5"
jacksonKotlin = "2.14.1"
dataFaker = "1.7.0"
ulidCreator = "5.1.0"
findbugsJsr305 = "3.0.2"
kotlinLogging = "2.1.23"
springdoc = "2.0.2"
kotest = "5.5.4"
kotestExtensionsSpring = "1.1.2"
mockk = "1.13.4"
ninjaSquadSpringMockk = "4.0.2"
kotlinFixture = "1.2.0"
p6spy = "1.9.0"

[plugins]
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDependencyManagement = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
liquibaseGradle = { id = "org.liquibase.gradle", version.ref = "liquibaseGradle" }
jacocoLog = { id = "org.barfuin.gradle.jacocolog", version.ref = "jacocoLog" }


[libraries]
# NOTE: Kotlin Support
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinStdlibJdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

# NOTE: Web
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
springBootStarterHateoas = { module = "org.springframework.boot:spring-boot-starter-hateoas", version.ref = "springBoot" }

# NOTE: Database
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBoot" }
springDataEnvers = { module = "org.springframework.data:spring-data-envers", version.ref = "springBoot" }
liquibase = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
h2database = { module = "com.h2database:h2", version.ref = "h2database" }
mysqlConnector = { module = "com.mysql:mysql-connector-j", version.ref = "mysqlConnector" }

# NOTE: Database (classifier: Jakarta)
queryDslJpa = { module = "com.querydsl:querydsl-jpa", version.ref = "queryDsl" }
queryDslApt = { module = "com.querydsl:querydsl-apt", version.ref = "queryDsl" }

# NOTE: Broker
springBootStarterAmqp = { module = "org.springframework.boot:spring-boot-starter-amqp", version.ref = "springBoot" }
springRabbitTest = { module = "org.springframework.amqp:spring-rabbit-test", version.ref = "springRabbit" }

# NOTE: Communication
springBootStarterMail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "springBoot" }

# NOTE: View
springBootStarterThymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "springBoot" }

# NOTE: Security
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springBoot" }
springSecurityTest = { module = "org.springframework.security:spring-security-test", version.ref = "springSecurity" }
jjwtApi = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwtImpl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwtJackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

# NOTE: Validation
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }

# NOTE: Data Process
springBootStarterBatch = { module = "org.springframework.boot:spring-boot-starter-batch", version.ref = "springBoot" }
springBatchTest = { module = "org.springframework.batch:spring-batch-test", version.ref = "springBatch" }
jacksonKotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jacksonKotlin" }

# NOTE: Data Support
dataFaker = { module = "net.datafaker:datafaker", version.ref = "dataFaker" }
ulidCreator = { module = "com.github.f4b6a3:ulid-creator", version.ref = "ulidCreator" }
findbugsJsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugsJsr305" }

# NOTE: Code Support
springBootStarterAop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "springBoot" }

# NOTE: Logging
kotlinLogging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlinLogging" }
p6spy = { module = "com.github.gavlyukovskiy:p6spy-spring-boot-starter", version.ref = "p6spy" }

# NOTE: Monitoring
springBootStarterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "springBoot" }

# NOTE: Docs
springdocUi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

# NOTE: Development Tool
springBootDevTools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBoot" }

# NOTE: Test Support
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
kotestRunnerJunit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotestAssertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotestProperty = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotestExtensionsSpring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotestExtensionsSpring" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
ninjaSquadSpringMockk = { module = "com.ninja-squad:springmockk", version.ref = "ninjaSquadSpringMockk" }
kotlinFixtureKotest = { module = "com.appmattus.fixture:fixture-kotest", version.ref = "kotlinFixture" }
kotlinFixtureGenerex = { module = "com.appmattus.fixture:fixture-generex", version.ref = "kotlinFixture" }


[bundles]
kotest = ["kotestRunnerJunit5", "kotestAssertionsCore", "kotestProperty", "kotestExtensionsSpring"]
mock = ["mockk", "ninjaSquadSpringMockk"]
fixture = ["kotlinFixtureKotest", "kotlinFixtureGenerex"]
